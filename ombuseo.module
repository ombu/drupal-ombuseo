<?php

/****
 * HOOKS
 */

/**
 * Implementation of hook_menu()
 */
function ombuseo_menu() {
    $items = array();
    $items['admin/settings/ombuseo'] = array(
        'title' => 'OMBU SEO Settings',
		'access arguments' => array('configure ombuseo'),
		'page callback' => 'drupal_get_form',
		'page arguments' => array('ombuseo_settings_form'),
    );

    return $items;
}

/**
 * Implementation of hook_perm()
 */
function ombuseo_perm() {
    return array(
        'configure ombuseo',
        'edit ombuseo fields',
    );
}

/**
 * Implementation of hook_form_alter()
 */
function ombuseo_form_alter(&$form, $form_state, $form_id) {
    if ($form['#id'] == 'node-form' && user_access('edit ombuseo fields') && variable_get('ombuseo_node_'.$form['type']['#value'], 0)) {

        $ombuseo = ombuseo_load($form['nid']['#value']);

        $form['ombuseo'] = array(
            '#type' => 'fieldset',
            '#title' => 'SEO',
            '#collapsed' => TRUE,
            '#tree' => TRUE,
            'meta_title' => array(
                '#title' => 'Alternate Page Title',
                '#description' => 'The alternate title is only used in the HTML &lt;title&gt; tag. If not set, the regular title will be used.',
                '#type' => 'textfield',
                '#default_value' => isset($ombuseo['meta_title']) ? $ombuseo['meta_title'] : '0',
            ),
            'meta_description' => array(
                '#title' => 'Meta Description',
                '#description' => 'Enter the meta description for this content.',
                '#type' => 'textfield',
                '#default_value' => isset($ombuseo['meta_description']) ? $ombuseo['meta_description'] : '0',
            ),
            'meta_keywords' => array(
                '#title' => 'Meta Keywords',
                '#description' => 'Comma-separated list of meta keywords such as: blue, smurf, sky.',
                '#type' => 'textfield',
                '#default_value' => isset($ombuseo['meta_keywords']) ? $ombuseo['meta_keywords'] : '0',
            ),
        );

    }
}

/**
 * Implementation of hook_nodeapi()
 */
function ombuseo_nodeapi(&$node, $op, $a3 = NULL, $a4 = NULL) {
    switch ($op) {
        case 'insert':
        case 'update':
            if (isset($node->ombuseo) && user_access('edit ombuseo fields')) {
                $obj = new stdClass();
                $obj->nid = $node->nid;
                foreach (array('meta_title', 'meta_description', 'meta_keywords') as $field) {
                    $obj->{$field} = $node->ombuseo[$field];
                }
                ombuseo_save($obj);
            }
            break;
    }
}

/**
 * Implementation of hook_preprocess_node()
 */
function ombuseo_preprocess_node(&$vars) {
    if ($vars['page'] && variable_get('ombuseo_node_'.$vars['node']->type, 0)) {
        $ombuseo = ombuseo_load($vars['node']->nid);
        if (!empty($ombuseo['meta_title'])) {
            ombuseo_meta_title($ombuseo['meta_title']);
        }
        if (!empty($ombuseo['meta_description'])) {
            drupal_set_html_head('<meta name="description" content="'. str_replace('"', '', $ombuseo['meta_description']) .'" />');
        }
        if (!empty($ombuseo['meta_keywords'])) {
            drupal_set_html_head('<meta name="keywords" content="'. str_replace('"', '', $ombuseo['meta_description']) .'" />');
        }
    }
}

/**
 * Implementatino of hook_preprocess_page()
 */
function ombuseo_preprocess_page(&$vars) {
    $meta_title = ombuseo_meta_title();
    if ($meta_title) {
        $vars['head_title'] =  $meta_title .' | '. variable_get('site_name', 'Drupal');
    }
}


/****
 * FORMS
 */

/**
 * Settings form
 */
function ombuseo_settings_form() {

    $form = array(
        'instructions' => array(
            '#value' => '<p>Select the node types to use OMBU SEO',
        ),
    );

    foreach (node_get_types() as $node_type) {
        $form['ombuseo_node_'. $node_type->type] = array(
            '#title' => $node_type->name,
            '#type' => 'checkbox',
            '#default_value' => variable_get('ombuseo_node_'. $node_type->type, 0),
        );
    }

    $form = system_settings_form($form);

    unset($form['buttons']['reset']);
    $form['buttons']['submit']['#value'] = 'Save';

    return $form;
}


/****
 * UTILITY
 */

/**
 * Loads an ombuseo node row from the database
 *
 * @param $nid Node id to load
 * @return array Associative array with values, if no record was found, returns
 *   an array with empty values
 */
function ombuseo_load($nid) {
    $row = db_fetch_array(db_query("SELECT * FROM {ombuseo} WHERE nid = %d", $nid));
    if (!$row) {
        $row = array(
            'meta_title' => '',
            'meta_description' => '',
            'meta_keywords' => '',
        );
    }
    return $row;
}

/**
 * Saves an ombuseo row to the database
 *
 * @param $ombuseo_obj Object to save
 */
function ombuseo_save(&$ombuseo_obj) {
    if (!isset($ombuseo_obj->nid)) {
        watchdog('ombuseo', 'Attempted to save entries to ombuseo without valid NID', NULL, WATCHDOG_ERROR);
        return FALSE;
    }

    $exists = db_result(db_query("SELECT nid FROM {ombuseo} WHERE nid = %d", $ombuseo_obj->nid));

    // Update
    if ($exists) {
        $result = drupal_write_record('ombuseo', $ombuseo_obj, 'nid');
    }
    // Create
    else {
        $result = drupal_write_record('ombuseo', $ombuseo_obj);
    }
    return $result;
}

/**
 * Holds values for the head <title> tag between node preprocess & page preprocess
 */
function ombuseo_meta_title($new_value = FALSE) {
    static $value = NULL;

    if ($new_value) {
        $value = $new_value;
    }

    return $value;
}
